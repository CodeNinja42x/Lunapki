{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProfitGraph(){const[chartData,setChartData]=useState({});const fetchData=async()=>{try{const response=await fetch('http://localhost:5000/api/data');const data=await response.json();setChartData({labels:['BTC'],datasets:[{label:'BTC Price',data:[parseFloat(data.price)],// Fiyatı grafiğe yerleştir\nbackgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]});}catch(error){console.error('Error fetching data:',error);}};useEffect(()=>{fetchData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"BTC Price Graph\"}),/*#__PURE__*/_jsx(Line,{data:chartData})]});}export default ProfitGraph;","map":{"version":3,"names":["React","useState","useEffect","Line","jsx","_jsx","jsxs","_jsxs","ProfitGraph","chartData","setChartData","fetchData","response","fetch","data","json","labels","datasets","label","parseFloat","price","backgroundColor","borderColor","borderWidth","error","console","children"],"sources":["/Users/gorkemberkeyuksel/Documents/GitHub/Lunapki/crypto_trading_bot/src/components/ProfitGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction ProfitGraph() {\n  const [chartData, setChartData] = useState({});\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const data = await response.json();\n\n      setChartData({\n        labels: ['BTC'],\n        datasets: [\n          {\n            label: 'BTC Price',\n            data: [parseFloat(data.price)], // Fiyatı grafiğe yerleştir\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          },\n        ],\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>BTC Price Graph</h2>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default ProfitGraph;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE9C,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CAC9D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAElCL,YAAY,CAAC,CACXM,MAAM,CAAE,CAAC,KAAK,CAAC,CACfC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,WAAW,CAClBJ,IAAI,CAAE,CAACK,UAAU,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAE;AAChCC,eAAe,CAAE,yBAAyB,CAC1CC,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDtB,SAAS,CAAC,IAAM,CACdS,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBrB,IAAA,CAACF,IAAI,EAACW,IAAI,CAAEL,SAAU,CAAE,CAAC,EACtB,CAAC,CAEV,CAEA,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}